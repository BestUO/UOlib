#pragma once
#include <iostream>

class AlgorithmExam
{
public:
	AlgorithmExam();
	~AlgorithmExam();
	///////数塔问题:
	///////从顶部出发在每一个节点可以选择向左或者向右走，
	///////一直走到底层，要求找出一条路径，使得路径上的数字之和最大.
	void Numberoftower();
	///////朋友圈数量人和人之间的朋友关系，
	//求出这些朋友关系中有多少个朋友圈（a-b、b-c、d-e、e-f，这里就有2个朋友圈）
	//给出时间复杂度
	///给出10w条
	void COF();
	//任意数分三组，使每组的和尽量相等
	void EQsum();
	//12个高矮不同的人排两排，每排必须从矮到高排列，第二排比对应的第一排的人高，有几种排列方式
	void paidui();
	//任务调度算法,time[m]:第m台机器处理一个任务的时间，所有任务都相同
	void taskscheduling(const int &ntask,const int &nsvr,const int *time);
	//设有n个正整数，将他们连接成一排，组成一个最大的多位整数。
	//如:n = 3时，3个整数13, 312, 343, 连成的最大整数为34331213。
	//如 : n = 4时, 4个整数7, 13, 4, 246连接成的最大整数为7424613。
	void maxnum();
	//输入的第一行表示节点的个数n（1 ≤ n ≤ 1000，节点的编号为0到n - 1）组成，
	//下面是n - 1行，每行有两个整数，第一个数表示父节点的编号，第二个数表示子节点的编号
	void treeheight();
	//给定一个句子（只包含字母和空格）， 将句子中的单词位置反转，单词用空格分割, 
	//单词之间只有一个空格，前后没有空格。 比如： （1） “hello xiao mi”->“mi xiao hello”
	void reverseword();
	//继MIUI8推出手机分身功能之后，MIUI9计划推出一个电话号码分身的功能：首先将电话号码中的每个数字加上8取个位，
	//	然后使用对应的大写字母代替 （"ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE"）， 
	//	然后随机打乱这些字母，所生成的字符串即为电话号码对应的分身。
	void phone();
	//春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的： “水仙花数”是指一个三位数，
	//	它的各位数字的立方和等于其本身，比如：153 = 1 ^ 3 + 5 ^ 3 + 3 ^ 3。 现在要求输出所有在m和n范围内的水仙花数。
	void flowernum();
	//数列的第一项为n，以后各项为前一项的平方根，求数列的前m项的和。
	void arraysum();
	//一只袋鼠要从河这边跳到河对岸，河很宽，但是河中间打了很多桩子，每隔一米就有一个，每个桩子上都有一个弹簧，
	//袋鼠跳到弹簧上就可以跳的更远。每个弹簧力量不同，用一个数字代表它的力量，
	//如果弹簧力量为5，就代表袋鼠下一跳最多能够跳5米，如果为0，就会陷进去无法继续跳跃。河流一共N米宽，
	//袋鼠初始位置就在第一个弹簧上面，要跳到最后一个弹簧之后就算过河了，给定每个弹簧的力量，求袋鼠最少需要多少跳能够到达对岸。如果无法到达输出 - 1
	void CrossRiver();
	//有一条彩色宝石项链，是由很多种不同的宝石组成的，包括红宝石，蓝宝石，钻石，翡翠，珍珠等。
	//	有一天国王把项链赏赐给了一个学者，并跟他说，你可以带走这条项链，但是王后很喜欢红宝石，蓝宝石，紫水晶，翡翠和钻石这五种，
	//	我要你从项链中截取连续的一小段还给我，这一段中必须包含所有的这五种宝石，剩下的部分你可以带走。如果无法找到则一个也无法带走。
	void gemstone();
	//给定一个十进制的正整数number，选择从里面去掉一部分数字，希望保留下来的数字组成的正整数最大。
	void maxnum2();
	//给定一个英文字符串,请写一段代码找出这个字符串中首先出现三次的那个英文字符。
	void firstthree();
private:
	///////数塔问题:
	int maxtwo(const uint32_t *data, int y, int x);
	
	int Catalan(int n);
};

